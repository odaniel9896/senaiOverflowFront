[{"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\index.js":"1","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\App.js":"2","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\GlobalStyles.js":"3","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\router.js":"4","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\services\\security.js":"5","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Register\\index.js":"6","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Home\\index.js":"7","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Login\\index.js":"8","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\services\\api.js":"9","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Register\\styles.js":"10","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Home\\styles.js":"11","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\utils.js":"12","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Login\\styles.js":"13","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\InputSearch\\index.js":"14","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Loading\\index.js":"15","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Alert\\index.js":"16","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\SpinnerLoading\\index.js":"17","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\SpinnerLoading\\styles.js":"18","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Alert\\styles.js":"19","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Loading\\styles.js":"20","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\InputSearch\\styles.js":"21","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Input\\index.js":"22","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Input\\styles.js":"23","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\modal\\index.js":"24","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\modal\\styles.js":"25","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\select\\index.js":"26","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\select\\styles.js":"27","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\tag\\index.js":"28","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\tag\\styles.js":"29","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\input\\index.js":"30","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\input\\styles.js":"31"},{"size":207,"mtime":1614185873730,"results":"32","hashOfConfig":"33"},{"size":203,"mtime":1614185873591,"results":"34","hashOfConfig":"33"},{"size":1517,"mtime":1614185873592,"results":"35","hashOfConfig":"33"},{"size":795,"mtime":1614185873741,"results":"36","hashOfConfig":"33"},{"size":1206,"mtime":1614185873743,"results":"37","hashOfConfig":"33"},{"size":3259,"mtime":1614186581454,"results":"38","hashOfConfig":"33"},{"size":13908,"mtime":1614189239121,"results":"39","hashOfConfig":"33"},{"size":2185,"mtime":1614190672328,"results":"40","hashOfConfig":"33"},{"size":114,"mtime":1614190076449,"results":"41","hashOfConfig":"33"},{"size":1714,"mtime":1614185873740,"results":"42","hashOfConfig":"33"},{"size":4472,"mtime":1614185873734,"results":"43","hashOfConfig":"33"},{"size":568,"mtime":1614185873744,"results":"44","hashOfConfig":"33"},{"size":1714,"mtime":1614185873737,"results":"45","hashOfConfig":"33"},{"size":520,"mtime":1614185873596,"results":"46","hashOfConfig":"33"},{"size":244,"mtime":1614185873597,"results":"47","hashOfConfig":"33"},{"size":759,"mtime":1614185873595,"results":"48","hashOfConfig":"33"},{"size":123,"mtime":1614185873605,"results":"49","hashOfConfig":"33"},{"size":376,"mtime":1614185873606,"results":"50","hashOfConfig":"33"},{"size":692,"mtime":1614185873596,"results":"51","hashOfConfig":"33"},{"size":613,"mtime":1614185873597,"results":"52","hashOfConfig":"33"},{"size":703,"mtime":1614185873596,"results":"53","hashOfConfig":"33"},{"size":359,"mtime":1614185873606,"results":"54","hashOfConfig":"55"},{"size":822,"mtime":1614185873606,"results":"56","hashOfConfig":"55"},{"size":339,"mtime":1614185873607,"results":"57","hashOfConfig":"33"},{"size":884,"mtime":1614185873607,"results":"58","hashOfConfig":"33"},{"size":431,"mtime":1614185873608,"results":"59","hashOfConfig":"33"},{"size":257,"mtime":1614185873608,"results":"60","hashOfConfig":"33"},{"size":223,"mtime":1614185873609,"results":"61","hashOfConfig":"33"},{"size":411,"mtime":1614185873609,"results":"62","hashOfConfig":"33"},{"size":359,"mtime":1614185873606,"results":"63","hashOfConfig":"33"},{"size":822,"mtime":1614185873606,"results":"64","hashOfConfig":"33"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"c6bv2j",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"67"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"67"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pf7qcw",{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\index.js",[],["131","132"],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\App.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\GlobalStyles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\router.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\services\\security.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Register\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Home\\index.js",["133","134","135","136","137","138","139"],"import { useEffect, useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport ReactEmbedGist from \"react-embed-gist\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Content,\r\n  ProfileContainer,\r\n  FeedContainer,\r\n  ActionsContainer,\r\n  QuestionCard,\r\n  Logo,\r\n  IconSignOut,\r\n  FormNewQuestion,\r\n  GistIcon,\r\n  ContainerGist,\r\n} from \"./styles\";\r\n\r\nimport Input from \"../../components/input\";\r\nimport imgProfile from \"../../assets/foto_perfil.png\";\r\nimport logo from \"../../assets/logo.png\";\r\nimport { api } from \"../../services/api\";\r\nimport { getUser, setUser, signOut } from \"../../services/security\";\r\nimport Modal from \"../../components/modal\";\r\nimport Select from \"../../components/select\";\r\nimport Tag from \"../../components/tag\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { validSquaredImage } from \"../../utils\";\r\nimport {\r\n  FaGithub,\r\n  FaGithubAlt,\r\n  FaGithubSquare,\r\n  FaReacteurope,\r\n} from \"react-icons/fa\";\r\nimport SpinnerLoading from \"../../components/SpinnerLoading\";\r\nimport InputSearch from \"../../components/InputSearch\";\r\n\r\nfunction Profile({ setIsLoading, handleReload, setMessage }) {\r\n  const [student, setStudent] = useState(getUser());\r\n\r\n  const handleImage = async (e) => {\r\n    if (!e.target.files[0]) return;\r\n\r\n    try {\r\n      await validSquaredImage(e.target.files[0]);\r\n\r\n      const data = new FormData();\r\n\r\n      data.append(\"image\", e.target.files[0]);\r\n\r\n      setIsLoading(true);\r\n\r\n      const response = await api.post(`/students/${student.id}/images`, data);\r\n\r\n      setTimeout(() => {\r\n        setStudent({ ...student, image: response.data.image });\r\n        handleReload();\r\n      }, 1000);\r\n\r\n      setUser({ ...student, image: response.data.image });\r\n    } catch (error) {\r\n      alert(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n        <img src={student.image || imgProfile} alt=\"Imagem de Perfil\" />\r\n        <label htmlFor=\"editImageProfile\">Editar Foto</label>\r\n        <input id=\"editImageProfile\" type=\"file\" onChange={handleImage} />\r\n      </section>\r\n      <section>\r\n        <strong>NOME:</strong>\r\n        <p>{student.name}</p>\r\n      </section>\r\n      <section>\r\n        <strong>RA:</strong>\r\n        <p>{student.ra}</p>\r\n      </section>\r\n      <section>\r\n        <strong>E-MAIL:</strong>\r\n        <p>{student.email}</p>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Answer({ answer }) {\r\n  const student = getUser();\r\n\r\n  return (\r\n    <section>\r\n      <header>\r\n        <img src={answer.Student.image || imgProfile} alt=\"Imagem de Perfil\" />\r\n        <strong>\r\n          por{\" \"}\r\n          {student.studentId === answer.Student.id\r\n            ? \"Você\"\r\n            : answer.Student.name}\r\n        </strong>\r\n        <p> {format(new Date(answer.created_at), \"dd/MM/yyyy 'às' HH:mm\")}</p>\r\n      </header>\r\n      <p>{answer.description}</p>\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction Question({ question, setIsLoading, setCurrentGist }) {\r\n  const [showAnswers, setShowAnswers] = useState(false);\r\n\r\n  const [newAnswer, setNewAnswer] = useState(\"\");\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setAnswers(question.Answers);\r\n  }, [question.Answers]);\r\n\r\n  const qtdAnswers = answers.length;\r\n\r\n  const handleAddAnswer = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (newAnswer.length < 10)\r\n      return alert(\"A resposta deve ter no mínimo 10 caracteres\");\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await api.post(`/questions/${question.id}/answers`, {\r\n        description: newAnswer,\r\n      });\r\n\r\n      const aluno = getUser();\r\n\r\n      const answerAdded = {\r\n        id: response.data.id,\r\n        description: newAnswer,\r\n        created_at: response.data.createdAt,\r\n        Student: {\r\n          id: aluno.studentId,\r\n          name: aluno.name,\r\n          image: aluno.image,\r\n        },\r\n      };\r\n\r\n      setAnswers([...answers, answerAdded]);\r\n\r\n      setNewAnswer(\"\");\r\n\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      alert(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const student = getUser();\r\n\r\n  return (\r\n    <QuestionCard>\r\n      <header>\r\n        <img\r\n          src={question.Student.image || imgProfile}\r\n          alt=\"Imagem de perfil\"\r\n        />\r\n        <strong>\r\n          por{\" \"}\r\n          {student.studentId === question.Student.id\r\n            ? \"Você\"\r\n            : question.Student.name}\r\n        </strong>\r\n        <p>\r\n          em {format(new Date(question.created_at), \"dd/MM/yyyy 'às' HH:mm\")}\r\n        </p>\r\n        {question.gist && (\r\n          <GistIcon onClick={() => setCurrentGist(question.gist)} />\r\n        )}\r\n      </header>\r\n      <section>\r\n        <strong>{question.title}</strong>\r\n        <p>{question.description}</p>\r\n        {question.image && <img src={question.image} alt=\"Imagem da questão\" />}\r\n      </section>\r\n      <footer>\r\n        <h1 onClick={() => setShowAnswers(!showAnswers)}>\r\n          {qtdAnswers === 0 ? (\r\n            \"Seja o primeiro a responder\"\r\n          ) : (\r\n            <>\r\n              {qtdAnswers}\r\n              {qtdAnswers > 1 ? \" Respostas\" : \" Resposta\"}\r\n            </>\r\n          )}\r\n        </h1>\r\n        {showAnswers && (\r\n          <>\r\n            {answers.map((answer) => (\r\n              <Answer answer={answer} />\r\n            ))}\r\n          </>\r\n        )}\r\n        <form onSubmit={handleAddAnswer}>\r\n          <textarea\r\n            minLength={10}\r\n            placeholder=\"Responda essa dúvida!\"\r\n            onChange={(e) => setNewAnswer(e.target.value)}\r\n            required\r\n            value={newAnswer}\r\n          />\r\n          <button>Enviar</button>\r\n        </form>\r\n      </footer>\r\n    </QuestionCard>\r\n  );\r\n}\r\n\r\nfunction NewQuestion({ handleReload, setIsLoading }) {\r\n  const [newQuestion, setNewQuestion] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    gist: \"\",\r\n  });\r\n\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  const [categoriesSel, setCategoriesSel] = useState([]);\r\n\r\n  const [image, setImage] = useState(null);\r\n\r\n  const imageRef = useRef();\r\n\r\n  const categoriesRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const loadCategories = async () => {\r\n      try {\r\n        const response = await api.get(\"/categories\");\r\n\r\n        setCategories(response.data);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    };\r\n\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const handleCategories = (e) => {\r\n    const idSel = e.target.value;\r\n\r\n    const categorySel = categories.find((c) => c.id.toString() === idSel);\r\n\r\n    if (categorySel && !categoriesSel.includes(categorySel))\r\n      setCategoriesSel([...categoriesSel, categorySel]);\r\n\r\n    e.target[e.target.selectedIndex].disabled = true;\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  const handleImage = (e) => {\r\n    if (e.target.files[0]) {\r\n      imageRef.current.src = URL.createObjectURL(e.target.files[0]);\r\n      imageRef.current.style.display = \"flex\";\r\n    } else {\r\n      imageRef.current.src = \"\";\r\n      imageRef.current.style.display = \"none\";\r\n    }\r\n\r\n    setImage(e.target.files[0]);\r\n  };\r\n\r\n  const handleUnselCategory = (idUnsel) => {\r\n    setCategoriesSel(categoriesSel.filter((c) => c.id !== idUnsel));\r\n\r\n    const { options } = categoriesRef.current;\r\n\r\n    for (var i = 0; i < options.length; i++) {\r\n      if (options[i].value === idUnsel.toString()) options[i].disabled = false;\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setNewQuestion({ ...newQuestion, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  const handleAddNewQuestion = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData();\r\n\r\n    data.append(\"title\", newQuestion.title);\r\n    data.append(\"description\", newQuestion.description);\r\n\r\n    const categories = categoriesSel.reduce((s, c) => (s += c.id + \",\"), \"\");\r\n\r\n    data.append(\"categories\", categories.substr(0, categories.length - 1));\r\n\r\n    if (image) data.append(\"image\", image);\r\n    if (newQuestion.gist) data.append(\"gist\", newQuestion.gist);\r\n\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      await api.post(\"/questions\", data, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      handleReload();\r\n    } catch (error) {\r\n      alert(error);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormNewQuestion onSubmit={handleAddNewQuestion}>\r\n      <Input\r\n        id=\"title\"\r\n        label=\"Título\"\r\n        value={newQuestion.title}\r\n        handler={handleInput}\r\n        minLength=\"5\"\r\n        required\r\n      />\r\n      <Input\r\n        id=\"description\"\r\n        label=\"Descrição\"\r\n        value={newQuestion.description}\r\n        handler={handleInput}\r\n        required\r\n        minLength=\"10\"\r\n      />\r\n      <Input\r\n        id=\"gist\"\r\n        label=\"Gist\"\r\n        value={newQuestion.gist}\r\n        handler={handleInput}\r\n        minLength=\"20\"\r\n      />\r\n      <Select\r\n        id=\"categories\"\r\n        label=\"Categorias\"\r\n        handler={handleCategories}\r\n        ref={categoriesRef}\r\n      >\r\n        <option value=\"\">Selecione</option>\r\n        {categories.map((c) => (\r\n          <option key={c.id} value={c.id}>\r\n            {c.description}\r\n          </option>\r\n        ))}\r\n      </Select>\r\n      <div>\r\n        {categoriesSel.map((c) => (\r\n          <Tag\r\n            key={c.id}\r\n            info={c.description}\r\n            handleClose={() => handleUnselCategory(c.id)}\r\n          ></Tag>\r\n        ))}\r\n      </div>\r\n      <input type=\"file\" onChange={handleImage} />\r\n      <img alt=\"Pré-visualização\" ref={imageRef} />\r\n      <button>Enviar</button>\r\n    </FormNewQuestion>\r\n  );\r\n}\r\n\r\nfunction Gist({ gist, handleClose }) {\r\n  if (gist) {\r\n    const formatedGist = gist.split(\".com/\").pop();\r\n    return (\r\n      <Modal\r\n        title=\"Exemplo de código\"\r\n        handleClose={() => handleClose(undefined)}\r\n      >\r\n        <ContainerGist>\r\n          <ReactEmbedGist gist={formatedGist} />\r\n        </ContainerGist>\r\n      </Modal>\r\n    );\r\n  } else return null;\r\n}\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const [questions, setQuestions] = useState([]);\r\n\r\n  const [reload, setReload] = useState(null);\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const [isLoadingFeed, setIsLoadingFeed] = useState(false);\r\n\r\n  const [showNewQuestion, setShowNewQuestion] = useState(false);\r\n\r\n  const [currentGist, setCurrentGist] = useState(undefined);\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  const [totalQuestions, setTotalQuestions] = useState(0);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const feedRef = useRef();\r\n\r\n  const loadQuestions = async (reload) => {\r\n    //se já tiver buscando,  não busca denovo\r\n    if (isLoadingFeed) return;\r\n\r\n    //se tiver chego no fim, não busca denovo\r\n    if (totalQuestions > 0 && totalQuestions == questions.length) return;\r\n\r\n    setIsLoadingFeed(true);\r\n\r\n    const response = await api.get(\"/feed\", {\r\n      params: { page: reload ? 1 : page },\r\n    });\r\n\r\n    setPage(page + 1);\r\n\r\n    setQuestions([...questions, ...response.data]);\r\n\r\n    setTotalQuestions(response.headers[\"x-total-count\"]);\r\n\r\n    setIsLoadingFeed(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadQuestions(true);\r\n  }, [reload]);\r\n\r\n  const handleSignOut = () => {\r\n    signOut();\r\n\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const handleReload = () => {\r\n    setShowNewQuestion(false);\r\n    setIsLoading(false);\r\n    setPage(1);\r\n    setQuestions([]);\r\n    setSearch(\"\");\r\n    setReload(Math.random());\r\n  };\r\n\r\n  const feedScrollObserver = (e) => {\r\n    const { scrollTop, clientHeight, scrollHeight } = e.target;\r\n\r\n    if (scrollTop + clientHeight > scrollHeight - 100 && search.length < 3)\r\n      loadQuestions();\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    setSearch(e.target.value);\r\n\r\n    if (e.target.value.length === 0) handleReload();\r\n\r\n    if (e.target.value.length < 3) return;\r\n\r\n    try {\r\n      const response = await api.get(\"/questions\", {\r\n        params: { search: e.target.value },\r\n      });\r\n\r\n      setQuestions(response.data);\r\n    } catch (error) {\r\n      alert(error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <Loading />}\r\n\r\n      <Gist gist={currentGist} handleClose={setCurrentGist} />\r\n\r\n      {showNewQuestion && (\r\n        <Modal\r\n          title=\"Faça uma pergunta\"\r\n          handleClose={() => setShowNewQuestion(false)}\r\n        >\r\n          <NewQuestion\r\n            handleReload={handleReload}\r\n            setIsLoading={setIsLoading}\r\n          />\r\n        </Modal>\r\n      )}\r\n      <Container>\r\n        <Header>\r\n          <Logo src={logo} onClick={handleReload} />\r\n          <InputSearch handler={handleSearch} value={search} />\r\n          <IconSignOut onClick={handleSignOut} />\r\n        </Header>\r\n        <Content>\r\n          <ProfileContainer>\r\n            <Profile handleReload={handleReload} setIsLoading={setIsLoading} />\r\n          </ProfileContainer>\r\n          <FeedContainer ref={feedRef} onScroll={feedScrollObserver}>\r\n            {questions.length === 0 &&\r\n              search.length > 3 &&\r\n              \"Nenhuma questão encontrada\"}\r\n            {questions.map((q) => (\r\n              <Question\r\n                question={q}\r\n                setIsLoading={setIsLoading}\r\n                setCurrentGist={setCurrentGist}\r\n              />\r\n            ))}\r\n            {isLoadingFeed && <SpinnerLoading />}\r\n            {totalQuestions > 0 &&\r\n              totalQuestions == questions.length &&\r\n              \"Isso é tudo!\"}\r\n          </FeedContainer>\r\n          <ActionsContainer>\r\n            <button onClick={() => setShowNewQuestion(true)}>\r\n              Fazer uma pergunta\r\n            </button>\r\n          </ActionsContainer>\r\n        </Content>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Login\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\services\\api.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Register\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Home\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\utils.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\pages\\Login\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\InputSearch\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Loading\\index.js",["140"],"import { Container } from \"./styles\";\r\n\r\nimport imgLogo from \"../../assets/logo.png\";\r\n\r\nfunction Loading() {\r\n  return (\r\n    <Container>\r\n      <img src={imgLogo} />\r\n      Carregando...\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Alert\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\SpinnerLoading\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\SpinnerLoading\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Alert\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Loading\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\InputSearch\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Input\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\Input\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\modal\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\modal\\styles.js",[],["141","142"],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\select\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\select\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\tag\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\tag\\styles.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\input\\index.js",[],"C:\\Users\\20185440\\Desktop\\senaiOverflowFront\\src\\components\\input\\styles.js",[],{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":31,"column":3,"nodeType":"149","messageId":"150","endLine":31,"endColumn":11},{"ruleId":"147","severity":1,"message":"151","line":32,"column":3,"nodeType":"149","messageId":"150","endLine":32,"endColumn":14},{"ruleId":"147","severity":1,"message":"152","line":33,"column":3,"nodeType":"149","messageId":"150","endLine":33,"endColumn":17},{"ruleId":"147","severity":1,"message":"153","line":34,"column":3,"nodeType":"149","messageId":"150","endLine":34,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":419,"column":46,"nodeType":"156","messageId":"157","endLine":419,"endColumn":48},{"ruleId":"158","severity":1,"message":"159","line":438,"column":6,"nodeType":"160","endLine":438,"endColumn":14,"suggestions":"161"},{"ruleId":"154","severity":1,"message":"155","line":521,"column":30,"nodeType":"156","messageId":"157","endLine":521,"endColumn":32},{"ruleId":"162","severity":1,"message":"163","line":8,"column":7,"nodeType":"164","endLine":8,"endColumn":28},{"ruleId":"143","replacedBy":"165"},{"ruleId":"145","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-unused-vars","'FaGithub' is defined but never used.","Identifier","unusedVar","'FaGithubAlt' is defined but never used.","'FaGithubSquare' is defined but never used.","'FaReacteurope' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadQuestions'. Either include it or remove the dependency array.","ArrayExpression",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["167"],["168"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},"Update the dependencies array to be: [loadQuestions, reload]",{"range":"172","text":"173"},[11284,11292],"[loadQuestions, reload]"]